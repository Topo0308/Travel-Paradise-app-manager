{"ast":null,"code":"import Constants from 'expo-constants';\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar LOCALHOST_IP = '192.168.129.33';\nvar API_PORT = '8000';\nvar API_PATH = 'api';\nvar getApiBaseUrl = function getApiBaseUrl() {\n  var _Constants$expoConfig, _Constants$manifest;\n  if (process.env.NODE_ENV === 'production') {\n    return process.env.REACT_APP_API_BASE_URL || \"http://\" + LOCALHOST_IP + \":\" + API_PORT + \"/\" + API_PATH;\n  }\n  if (Platform.OS === 'web') {\n    return \"http://\" + LOCALHOST_IP + \":\" + API_PORT + \"/\" + API_PATH;\n  }\n  var debuggerHost = ((_Constants$expoConfig = Constants.expoConfig) == null ? void 0 : _Constants$expoConfig.hostUri) || ((_Constants$manifest = Constants.manifest) == null ? void 0 : _Constants$manifest.debuggerHost) || null;\n  if (debuggerHost) {\n    var ip = debuggerHost.split(':')[0];\n    return \"http://\" + ip + \":\" + API_PORT + \"/\" + API_PATH;\n  }\n  return \"http://\" + LOCALHOST_IP + \":\" + API_PORT + \"/\" + API_PATH;\n};\nexport var API_BASE_URL = getApiBaseUrl();\nconsole.log('üåê API_BASE_URL:', API_BASE_URL);","map":{"version":3,"names":["Constants","Platform","LOCALHOST_IP","API_PORT","API_PATH","getApiBaseUrl","_Constants$expoConfig","_Constants$manifest","process","env","NODE_ENV","REACT_APP_API_BASE_URL","OS","debuggerHost","expoConfig","hostUri","manifest","ip","split","API_BASE_URL","console","log"],"sources":["D:/Travel-Paradise-app-manager/frontend/screens/constants.js"],"sourcesContent":["import Constants from 'expo-constants';\r\nimport { Platform } from 'react-native';\r\n\r\nconst LOCALHOST_IP = '192.168.129.33'; // Ton IP locale visible par mobile\r\nconst API_PORT = '8000';\r\nconst API_PATH = 'api';\r\n\r\nconst getApiBaseUrl = () => {\r\n  if (process.env.NODE_ENV === 'production') {\r\n    return process.env.REACT_APP_API_BASE_URL || `http://${LOCALHOST_IP}:${API_PORT}/${API_PATH}`;\r\n  }\r\n\r\n  if (Platform.OS === 'web') {\r\n    return `http://${LOCALHOST_IP}:${API_PORT}/${API_PATH}`;\r\n  }\r\n\r\n  const debuggerHost = Constants.expoConfig?.hostUri || Constants.manifest?.debuggerHost || null;\r\n  if (debuggerHost) {\r\n    const ip = debuggerHost.split(':')[0];\r\n    return `http://${ip}:${API_PORT}/${API_PATH}`;\r\n  }\r\n\r\n  return `http://${LOCALHOST_IP}:${API_PORT}/${API_PATH}`;\r\n};\r\n\r\nexport const API_BASE_URL = getApiBaseUrl();\r\n\r\nconsole.log('üåê API_BASE_URL:', API_BASE_URL);\r\n"],"mappings":"AAAA,OAAOA,SAAS,MAAM,gBAAgB;AAAC,OAAAC,QAAA;AAGvC,IAAMC,YAAY,GAAG,gBAAgB;AACrC,IAAMC,QAAQ,GAAG,MAAM;AACvB,IAAMC,QAAQ,GAAG,KAAK;AAEtB,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAA,EAAS;EAAA,IAAAC,qBAAA,EAAAC,mBAAA;EAC1B,IAAIC,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,YAAY,EAAE;IACzC,OAAOF,OAAO,CAACC,GAAG,CAACE,sBAAsB,gBAAcT,YAAY,SAAIC,QAAQ,SAAIC,QAAU;EAC/F;EAEA,IAAIH,QAAQ,CAACW,EAAE,KAAK,KAAK,EAAE;IACzB,mBAAiBV,YAAY,SAAIC,QAAQ,SAAIC,QAAQ;EACvD;EAEA,IAAMS,YAAY,GAAG,EAAAP,qBAAA,GAAAN,SAAS,CAACc,UAAU,qBAApBR,qBAAA,CAAsBS,OAAO,OAAAR,mBAAA,GAAIP,SAAS,CAACgB,QAAQ,qBAAlBT,mBAAA,CAAoBM,YAAY,KAAI,IAAI;EAC9F,IAAIA,YAAY,EAAE;IAChB,IAAMI,EAAE,GAAGJ,YAAY,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACrC,mBAAiBD,EAAE,SAAId,QAAQ,SAAIC,QAAQ;EAC7C;EAEA,mBAAiBF,YAAY,SAAIC,QAAQ,SAAIC,QAAQ;AACvD,CAAC;AAED,OAAO,IAAMe,YAAY,GAAGd,aAAa,CAAC,CAAC;AAE3Ce,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEF,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}