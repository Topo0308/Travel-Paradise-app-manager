{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { TextInput, Button, Card, Title, Paragraph } from 'react-native-paper';\nimport axios from 'axios';\nimport { jsx as _jsx, Fragment as _Fragment, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function LoginScreen(_ref) {\n  var navigation = _ref.navigation;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isRegistering = _useState2[0],\n    setIsRegistering = _useState2[1];\n  var _useState3 = useState(''),\n    _useState4 = _slicedToArray(_useState3, 2),\n    email = _useState4[0],\n    setEmail = _useState4[1];\n  var _useState5 = useState(''),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(false),\n    _useState8 = _slicedToArray(_useState7, 2),\n    loading = _useState8[0],\n    setLoading = _useState8[1];\n  var _useState9 = useState(''),\n    _useState0 = _slicedToArray(_useState9, 2),\n    prenom = _useState0[0],\n    setPrenom = _useState0[1];\n  var _useState1 = useState(''),\n    _useState10 = _slicedToArray(_useState1, 2),\n    nom = _useState10[0],\n    setNom = _useState10[1];\n  var _useState11 = useState(''),\n    _useState12 = _slicedToArray(_useState11, 2),\n    confirmPassword = _useState12[0],\n    setConfirmPassword = _useState12[1];\n  var handleLogin = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      if (!email || !password) {\n        Alert.alert('Erreur', 'Veuillez remplir tous les champs');\n        return;\n      }\n      setLoading(true);\n      console.log('üîë Tentative de connexion mobile...', {\n        email: email,\n        url: API_BASE_URL + \"/auth/login\"\n      });\n      try {\n        var response = yield axios.post(API_BASE_URL + \"/auth/login\", {\n          email: email,\n          password: password\n        });\n        console.log('üì± R√©ponse mobile:', response.data);\n        if (response.data.success) {\n          var user = response.data.user;\n          switch (user.role) {\n            case 'admin':\n              navigation.navigate('AdminHome', {\n                user: user\n              });\n              break;\n            case 'guide':\n              navigation.navigate('GuideHome', {\n                user: user\n              });\n              break;\n            case 'visiteur':\n              navigation.navigate('VisiteurHome', {\n                user: user\n              });\n              break;\n            default:\n              Alert.alert('Erreur', 'R√¥le utilisateur non reconnu');\n          }\n        } else {\n          Alert.alert('Erreur', response.data.message || 'Identifiants incorrects');\n        }\n      } catch (error) {\n        console.error('‚ùå Erreur de connexion mobile:', error);\n        Alert.alert('Erreur', 'Probl√®me de connexion au serveur');\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleLogin() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  var handleRegister = function () {\n    var _ref3 = _asyncToGenerator(function* () {\n      if (!prenom || !nom || !email || !password || !confirmPassword) {\n        Alert.alert('Erreur', 'Veuillez remplir tous les champs');\n        return;\n      }\n      if (password !== confirmPassword) {\n        Alert.alert('Erreur', 'Les mots de passe ne correspondent pas');\n        return;\n      }\n      if (password.length < 6) {\n        Alert.alert('Erreur', 'Le mot de passe doit contenir au moins 6 caract√®res');\n        return;\n      }\n      var emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n      if (!emailRegex.test(email)) {\n        Alert.alert('Erreur', 'Veuillez entrer un email valide');\n        return;\n      }\n      setLoading(true);\n      console.log('üöÄ Tentative d\\'inscription mobile...', {\n        prenom: prenom,\n        nom: nom,\n        email: email,\n        url: API_BASE_URL + \"/auth/register\"\n      });\n      try {\n        var response = yield axios.post(API_BASE_URL + \"/auth/register\", {\n          prenom: prenom,\n          nom: nom,\n          email: email,\n          password: password,\n          role: 'visiteur'\n        });\n        console.log('üìù R√©ponse inscription mobile:', response.data);\n        if (response.data.success) {\n          Alert.alert('Succ√®s', 'Compte cr√©√© avec succ√®s ! Vous pouvez maintenant vous connecter.', [{\n            text: 'OK',\n            onPress: function onPress() {\n              setIsRegistering(false);\n              setPrenom('');\n              setNom('');\n              setEmail('');\n              setPassword('');\n              setConfirmPassword('');\n            }\n          }]);\n        } else {\n          Alert.alert('Erreur', response.data.message || 'Erreur lors de la cr√©ation du compte');\n        }\n      } catch (error) {\n        console.error('‚ùå Erreur d\\'inscription mobile:', error);\n        var errorMessage = 'Erreur de connexion au serveur';\n        if (error.response && error.response.data && error.response.data.message) {\n          errorMessage = error.response.data.message;\n        }\n        Alert.alert('Erreur', errorMessage);\n      } finally {\n        setLoading(false);\n      }\n    });\n    return function handleRegister() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Card, {\n      style: styles.card,\n      children: _jsxs(Card.Content, {\n        children: [_jsx(Title, {\n          style: styles.title,\n          children: \"\\uD83C\\uDF0D Travel Paradise\"\n        }), _jsx(Paragraph, {\n          style: styles.subtitle,\n          children: isRegistering ? 'Cr√©er un nouveau compte' : 'Connexion √† votre espace'\n        }), isRegistering ? _jsxs(_Fragment, {\n          children: [_jsx(TextInput, {\n            label: \"Pr\\xE9nom *\",\n            value: prenom,\n            onChangeText: setPrenom,\n            mode: \"outlined\",\n            style: styles.input,\n            placeholder: \"Jean\"\n          }), _jsx(TextInput, {\n            label: \"Nom *\",\n            value: nom,\n            onChangeText: setNom,\n            mode: \"outlined\",\n            style: styles.input,\n            placeholder: \"Dupont\"\n          }), _jsx(TextInput, {\n            label: \"Email *\",\n            value: email,\n            onChangeText: setEmail,\n            mode: \"outlined\",\n            style: styles.input,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            placeholder: \"jean.dupont@example.com\"\n          }), _jsx(TextInput, {\n            label: \"Mot de passe *\",\n            value: password,\n            onChangeText: setPassword,\n            mode: \"outlined\",\n            style: styles.input,\n            secureTextEntry: true,\n            placeholder: \"Au moins 6 caract\\xE8res\"\n          }), _jsx(TextInput, {\n            label: \"Confirmer le mot de passe *\",\n            value: confirmPassword,\n            onChangeText: setConfirmPassword,\n            mode: \"outlined\",\n            style: styles.input,\n            secureTextEntry: true,\n            placeholder: \"R\\xE9p\\xE9tez votre mot de passe\"\n          }), _jsx(Button, {\n            mode: \"contained\",\n            onPress: handleRegister,\n            loading: loading,\n            style: styles.button,\n            contentStyle: styles.buttonContent,\n            disabled: loading,\n            children: \"Cr\\xE9er mon compte\"\n          }), _jsx(Button, {\n            mode: \"text\",\n            onPress: function onPress() {\n              return setIsRegistering(false);\n            },\n            style: styles.button,\n            disabled: loading,\n            children: \"Retour \\xE0 la connexion\"\n          })]\n        }) : _jsxs(_Fragment, {\n          children: [_jsx(TextInput, {\n            label: \"Email\",\n            value: email,\n            onChangeText: setEmail,\n            mode: \"outlined\",\n            style: styles.input,\n            keyboardType: \"email-address\",\n            autoCapitalize: \"none\",\n            placeholder: \"admin@test.com\"\n          }), _jsx(TextInput, {\n            label: \"Mot de passe\",\n            value: password,\n            onChangeText: setPassword,\n            mode: \"outlined\",\n            style: styles.input,\n            secureTextEntry: true,\n            placeholder: \"password\"\n          }), _jsx(Button, {\n            mode: \"contained\",\n            onPress: handleLogin,\n            loading: loading,\n            style: styles.button,\n            contentStyle: styles.buttonContent,\n            disabled: loading,\n            children: \"Se connecter\"\n          }), _jsx(Button, {\n            mode: \"outlined\",\n            onPress: function onPress() {\n              return setIsRegistering(true);\n            },\n            style: styles.button,\n            disabled: loading,\n            children: \"Cr\\xE9er un compte\"\n          })]\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    padding: 20,\n    backgroundColor: '#f5f5f5'\n  },\n  card: {\n    padding: 20\n  },\n  title: {\n    textAlign: 'center',\n    fontSize: 24,\n    marginBottom: 10,\n    color: '#2196F3'\n  },\n  subtitle: {\n    textAlign: 'center',\n    marginBottom: 20,\n    color: '#666'\n  },\n  testAccountsContainer: {\n    backgroundColor: '#e3f2fd',\n    padding: 15,\n    borderRadius: 8,\n    marginBottom: 20\n  },\n  testAccountsTitle: {\n    fontWeight: 'bold',\n    color: '#1976d2',\n    marginBottom: 5\n  },\n  testAccountsText: {\n    fontSize: 12,\n    color: '#1976d2',\n    marginBottom: 2\n  },\n  input: {\n    marginBottom: 15\n  },\n  button: {\n    marginTop: 10\n  },\n  buttonContent: {\n    height: 50\n  }\n});","map":{"version":3,"names":["React","useState","View","StyleSheet","Alert","TextInput","Button","Card","Title","Paragraph","axios","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","LoginScreen","_ref","navigation","_useState","_useState2","_slicedToArray","isRegistering","setIsRegistering","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","loading","setLoading","_useState9","_useState0","prenom","setPrenom","_useState1","_useState10","nom","setNom","_useState11","_useState12","confirmPassword","setConfirmPassword","handleLogin","_ref2","_asyncToGenerator","alert","console","log","url","API_BASE_URL","response","post","data","success","user","role","navigate","message","error","apply","arguments","handleRegister","_ref3","length","emailRegex","test","text","onPress","errorMessage","style","styles","container","children","card","Content","title","subtitle","label","value","onChangeText","mode","input","placeholder","keyboardType","autoCapitalize","secureTextEntry","button","contentStyle","buttonContent","disabled","create","flex","justifyContent","padding","backgroundColor","textAlign","fontSize","marginBottom","color","testAccountsContainer","borderRadius","testAccountsTitle","fontWeight","testAccountsText","marginTop","height"],"sources":["D:/Travel-Paradise-app-manager/frontend/screens/LoginScreen.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { View, StyleSheet, Alert } from 'react-native';\r\nimport { TextInput, Button, Card, Title, Paragraph } from 'react-native-paper';\r\nimport axios from 'axios';\r\n\r\n\r\nexport default function LoginScreen({ navigation }) {\r\n  const [isRegistering, setIsRegistering] = useState(false);\r\n\r\n  // √âtats communs\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // √âtats inscription\r\n  const [prenom, setPrenom] = useState('');\r\n  const [nom, setNom] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n\r\n  const handleLogin = async () => {\r\n    if (!email || !password) {\r\n      Alert.alert('Erreur', 'Veuillez remplir tous les champs');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    console.log('üîë Tentative de connexion mobile...', { email, url: `${API_BASE_URL}/auth/login` });\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/login`, {\r\n        email,\r\n        password\r\n      });\r\n\r\n      console.log('üì± R√©ponse mobile:', response.data);\r\n\r\n      if (response.data.success) {\r\n        const user = response.data.user;\r\n        \r\n        switch (user.role) {\r\n          case 'admin':\r\n            navigation.navigate('AdminHome', { user });\r\n            break;\r\n          case 'guide':\r\n            navigation.navigate('GuideHome', { user });\r\n            break;\r\n          case 'visiteur':\r\n            navigation.navigate('VisiteurHome', { user });\r\n            break;\r\n          default:\r\n            Alert.alert('Erreur', 'R√¥le utilisateur non reconnu');\r\n        }\r\n      } else {\r\n        Alert.alert('Erreur', response.data.message || 'Identifiants incorrects');\r\n      }\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur de connexion mobile:', error);\r\n      Alert.alert('Erreur', 'Probl√®me de connexion au serveur');\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleRegister = async () => {\r\n    if (!prenom || !nom || !email || !password || !confirmPassword) {\r\n      Alert.alert('Erreur', 'Veuillez remplir tous les champs');\r\n      return;\r\n    }\r\n    if (password !== confirmPassword) {\r\n      Alert.alert('Erreur', 'Les mots de passe ne correspondent pas');\r\n      return;\r\n    }\r\n    if (password.length < 6) {\r\n      Alert.alert('Erreur', 'Le mot de passe doit contenir au moins 6 caract√®res');\r\n      return;\r\n    }\r\n\r\n    // Validation email\r\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n    if (!emailRegex.test(email)) {\r\n      Alert.alert('Erreur', 'Veuillez entrer un email valide');\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    console.log('üöÄ Tentative d\\'inscription mobile...', { prenom, nom, email, url: `${API_BASE_URL}/auth/register` });\r\n\r\n    try {\r\n      const response = await axios.post(`${API_BASE_URL}/auth/register`, {\r\n        prenom,\r\n        nom,\r\n        email,\r\n        password,\r\n        role: 'visiteur'\r\n      });\r\n\r\n      console.log('üìù R√©ponse inscription mobile:', response.data);\r\n\r\n      if (response.data.success) {\r\n        Alert.alert('Succ√®s', 'Compte cr√©√© avec succ√®s ! Vous pouvez maintenant vous connecter.', [\r\n          {\r\n            text: 'OK',\r\n            onPress: () => {\r\n              // Reset et retour au login\r\n              setIsRegistering(false);\r\n              setPrenom('');\r\n              setNom('');\r\n              setEmail('');\r\n              setPassword('');\r\n              setConfirmPassword('');\r\n            }\r\n          }\r\n        ]);\r\n      } else {\r\n        Alert.alert('Erreur', response.data.message || 'Erreur lors de la cr√©ation du compte');\r\n      }\r\n    } catch (error) {\r\n      console.error('‚ùå Erreur d\\'inscription mobile:', error);\r\n      let errorMessage = 'Erreur de connexion au serveur';\r\n      if (error.response && error.response.data && error.response.data.message) {\r\n        errorMessage = error.response.data.message;\r\n      }\r\n      Alert.alert('Erreur', errorMessage);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Card style={styles.card}>\r\n        <Card.Content>\r\n          <Title style={styles.title}>üåç Travel Paradise</Title>\r\n          <Paragraph style={styles.subtitle}>\r\n            {isRegistering ? 'Cr√©er un nouveau compte' : 'Connexion √† votre espace'}\r\n          </Paragraph>\r\n\r\n          {isRegistering ? (\r\n            <>\r\n              <TextInput\r\n                label=\"Pr√©nom *\"\r\n                value={prenom}\r\n                onChangeText={setPrenom}\r\n                mode=\"outlined\"\r\n                style={styles.input}\r\n                placeholder=\"Jean\"\r\n              />\r\n              <TextInput\r\n                label=\"Nom *\"\r\n                value={nom}\r\n                onChangeText={setNom}\r\n                mode=\"outlined\"\r\n                style={styles.input}\r\n                placeholder=\"Dupont\"\r\n              />\r\n              <TextInput\r\n                label=\"Email *\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n                mode=\"outlined\"\r\n                style={styles.input}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n                placeholder=\"jean.dupont@example.com\"\r\n              />\r\n              <TextInput\r\n                label=\"Mot de passe *\"\r\n                value={password}\r\n                onChangeText={setPassword}\r\n                mode=\"outlined\"\r\n                style={styles.input}\r\n                secureTextEntry\r\n                placeholder=\"Au moins 6 caract√®res\"\r\n              />\r\n              <TextInput\r\n                label=\"Confirmer le mot de passe *\"\r\n                value={confirmPassword}\r\n                onChangeText={setConfirmPassword}\r\n                mode=\"outlined\"\r\n                style={styles.input}\r\n                secureTextEntry\r\n                placeholder=\"R√©p√©tez votre mot de passe\"\r\n              />\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={handleRegister}\r\n                loading={loading}\r\n                style={styles.button}\r\n                contentStyle={styles.buttonContent}\r\n                disabled={loading}\r\n              >\r\n                Cr√©er mon compte\r\n              </Button>\r\n              <Button\r\n                mode=\"text\"\r\n                onPress={() => setIsRegistering(false)}\r\n                style={styles.button}\r\n                disabled={loading}\r\n              >\r\n                Retour √† la connexion\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <TextInput\r\n                label=\"Email\"\r\n                value={email}\r\n                onChangeText={setEmail}\r\n                mode=\"outlined\"\r\n                style={styles.input}\r\n                keyboardType=\"email-address\"\r\n                autoCapitalize=\"none\"\r\n                placeholder=\"admin@test.com\"\r\n              />\r\n              <TextInput\r\n                label=\"Mot de passe\"\r\n                value={password}\r\n                onChangeText={setPassword}\r\n                mode=\"outlined\"\r\n                style={styles.input}\r\n                secureTextEntry\r\n                placeholder=\"password\"\r\n              />\r\n              <Button\r\n                mode=\"contained\"\r\n                onPress={handleLogin}\r\n                loading={loading}\r\n                style={styles.button}\r\n                contentStyle={styles.buttonContent}\r\n                disabled={loading}\r\n              >\r\n                Se connecter\r\n              </Button>\r\n              <Button\r\n                mode=\"outlined\"\r\n                onPress={() => setIsRegistering(true)}\r\n                style={styles.button}\r\n                disabled={loading}\r\n              >\r\n                Cr√©er un compte\r\n              </Button>\r\n            </>\r\n          )}\r\n        </Card.Content>\r\n      </Card>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    justifyContent: 'center',\r\n    padding: 20,\r\n    backgroundColor: '#f5f5f5',\r\n  },\r\n  card: {\r\n    padding: 20,\r\n  },\r\n  title: {\r\n    textAlign: 'center',\r\n    fontSize: 24,\r\n    marginBottom: 10,\r\n    color: '#2196F3',\r\n  },\r\n  subtitle: {\r\n    textAlign: 'center',\r\n    marginBottom: 20,\r\n    color: '#666',\r\n  },\r\n  testAccountsContainer: {\r\n    backgroundColor: '#e3f2fd',\r\n    padding: 15,\r\n    borderRadius: 8,\r\n    marginBottom: 20,\r\n  },\r\n  testAccountsTitle: {\r\n    fontWeight: 'bold',\r\n    color: '#1976d2',\r\n    marginBottom: 5,\r\n  },\r\n  testAccountsText: {\r\n    fontSize: 12,\r\n    color: '#1976d2',\r\n    marginBottom: 2,\r\n  },\r\n  input: {\r\n    marginBottom: 15,\r\n  },\r\n  button: {\r\n    marginTop: 10,\r\n  },\r\n  buttonContent: {\r\n    height: 50,\r\n  },\r\n});"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}